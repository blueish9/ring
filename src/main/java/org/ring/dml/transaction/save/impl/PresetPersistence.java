package org.ring.dml.transaction.save.impl;

import org.ring.dml.transaction.save.AbstractPersistence;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;

/**
 * Created by quanle on 6/2/2017.
 */
public class PresetPersistence extends AbstractPersistence
{
    public void execute(Connection connection)
    {
        try
        {
            // prepare
            PreparedStatement updateStatement = mapper.getUpdateStatement(connection);
            PreparedStatement existStatement = mapper.getExistStatement(connection);
            PreparedStatement insertStatement = mapper.getInsertStatement(connection);

            // traverseAll, setInsertParameter, setInsertParameter
            for (Object item : dataSet)
            {
                Object id = mapper.getId(item);
                if (id != null)
                {
                    if (isExist(existStatement, id))
                    {
                        setUpdateParameter(updateStatement, item, id);
                    }
                    else
                    {
                        setInsertParameter(insertStatement, item);
                        insertStatement.addBatch();
                    }
                }
                else        // id == null and autoGenerated == false (due to pre-check)
                {
                    setInsertParameter(insertStatement, item);
                    insertStatement.addBatch();
                }
            }

            // execute insert before update
            insertStatement.executeBatch();
            updateStatement.executeBatch();

            insertStatement.close();
            updateStatement.close();
        }
        catch (SQLException | IllegalAccessException e)
        {
            e.printStackTrace();
        }
    }
}